{"version":3,"file":"static/js/716.d83dab18.chunk.js","mappings":"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","sources":["common/utils/smallFn/convertDate.js","common/utils/smallFn/getResultData.js","common/utils/payments/generatePaymentUrl.js","common/utils/payments/orderRequest.js","common/utils/smallFn/getUserData.js","pages/testFinalPage/testFinalPage.jsx"],"sourcesContent":["import { format } from 'date-fns';\r\nimport { toZonedTime  } from 'date-fns-tz';\r\nimport { uk } from 'date-fns/locale';\r\n\r\nfunction translateUkrainianMonthToEnglish(month) {\r\n    const months = {\r\n        \"січня\": \"January\",\r\n        \"лютого\": \"February\",\r\n        \"березня\": \"March\",\r\n        \"квітня\": \"April\",\r\n        \"травня\": \"May\",\r\n        \"червня\": \"June\",\r\n        \"липня\": \"July\",\r\n        \"серпня\": \"August\",\r\n        \"вересня\": \"September\",\r\n        \"жовтня\": \"October\",\r\n        \"листопада\": \"November\",\r\n        \"грудня\": \"December\"\r\n    };\r\n\r\n    return months[month];\r\n}\r\n\r\nfunction parseUkrainianDate(dateStr) {\r\n    const cleanedDateStr = dateStr.replace('р.', '').replace('о', '').trim();\r\n    \r\n    const [day, monthUkr, year, time, time2, time3] = cleanedDateStr.split(' ');\r\n   \r\n    const monthEng = translateUkrainianMonthToEnglish(monthUkr);\r\n\r\n    // const formattedDateStr = `${monthEng} ${day}, ${year} ${time3}.000+00:00`;\r\n    const formattedDateStr = `${monthEng} ${day}, ${year} ${time3}`;\r\n\r\n    return new Date(formattedDateStr).toUTCString();\r\n}\r\n\r\n\r\n\r\nconst formatDateToUkrainian = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    const day = date.getUTCDate();\r\n    const monthNames = ['січня', 'лютого', 'березня', 'квітня', 'травня', 'червня', 'липня', 'серпня', 'вересня', 'жовтня', 'листопада', 'грудня'];\r\n    const month = monthNames[date.getUTCMonth()];\r\n    const year = date.getUTCFullYear();\r\n    const hours = String(date.getUTCHours()).padStart(2, '0');\r\n    const minutes = String(date.getUTCMinutes()).padStart(2, '0');\r\n  \r\n    return `${day} ${month} ${year} р. о ${hours}:${minutes}`;\r\n  };\r\n\r\nexport {parseUkrainianDate, formatDateToUkrainian};","import { formatDateToUkrainian } from \"./convertDate\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst RenderSelectedSlots = (language, level, lang_from_general_cal, teacherId, teacherName, lessonTypes, count, schoolId) => {\r\n\r\n    const selectedSlots = localStorage.getItem('selectedSlots');\r\n\r\n    if (selectedSlots) {\r\n        try {\r\n            const parsedSlots = JSON.parse(selectedSlots);\r\n            if (Array.isArray(parsedSlots)) {\r\n                return (\r\n                    <div >\r\n                        <ul style={{ backgroundColor: \"#F4F4F4\" }} className=\"resultList\">\r\n                            <li>\r\n                                <div className=\"resultEl\"><div className=\"resultHead\">Мова</div></div>\r\n                                <div className=\"resultEl\"><div className=\"resultHead\">Рівень</div></div>\r\n                                <div className=\"resultEl\"><div className=\"resultHead\">Тип уроку</div></div>\r\n                                <div className=\"resultEl\"><div className=\"resultHead\">Вчитель</div></div>\r\n                                <div className=\"resultEl\"><div className=\"resultHead\">Дата</div></div>\r\n                                <div className=\"resultEl\"><div className=\"resultHead\">Вартість</div></div>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"order-ul\">\r\n\r\n                            {parsedSlots.map((slot, index) => {\r\n                                const [student, teacherId, language, level, lessonType, date] = slot.split(', ');\r\n                                const formattedDate = formatDateToUkrainian(date);\r\n\r\n                                return (\r\n                                    <ul className=\"resultList\" key={index}>\r\n                                        <li>\r\n                                            <div className=\"resultEl\"><div className=\"resultHeadMob\">Мова</div><div className=\"resultItem\">{language}</div></div>\r\n                                            <div className=\"resultEl\"><div className=\"resultHeadMob\">Рівень</div><div className=\"resultItem\">{level}</div></div>\r\n                                            <div className=\"resultEl\"><div className=\"resultHeadMob\">Тип уроку</div><div className=\"resultItem\">{lessonType}</div></div>\r\n                                            <div className=\"resultEl\"><div className=\"resultHeadMob\">Вчитель</div><div className=\"resultItem\">{student}</div></div>\r\n                                            <div className=\"resultEl\"><div className=\"resultHeadMob\">Дата</div><div className=\"resultItem\">{formattedDate}</div></div>\r\n                                            <div className=\"resultEl\"><div className=\"resultHeadMob\">Вартість</div><div className=\"resultItem\">1000 грн</div></div>\r\n                                        </li>\r\n                                    </ul>\r\n                                );\r\n                            })}\r\n                        </div>\r\n\r\n                        <div className=\"totalPrice\">ДО СПЛАТИ: 2000 грн</div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return <p>No valid slots found.</p>;\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error parsing selectedSlots\", error);\r\n            return <p>Error retrieving slots.</p>;\r\n        }\r\n    } else {\r\n        const selectedTimes = localStorage.getItem('selectedDates');\r\n\r\n\r\n        if (selectedTimes) {\r\n            try {\r\n\r\n                const parsedTimes = JSON.parse(selectedTimes);\r\n                if (Array.isArray(parsedTimes)) {\r\n                    return (\r\n                        <>\r\n                            <ul style={{ backgroundColor: \"#F4F4F4\" }} className=\"resultList\">\r\n                                <li>\r\n                                    <div className=\"resultEl\"><div className=\"resultHead\">Мова</div></div>\r\n                                    <div className=\"resultEl\"><div className=\"resultHead\">Рівень</div></div>\r\n                                    <div className=\"resultEl\"><div className=\"resultHead\">Тип уроку</div></div>\r\n                                    <div className=\"resultEl\"><div className=\"resultHead\">Вчитель</div></div>\r\n                                    <div className=\"resultEl\"><div className=\"resultHead\">Дата</div></div>\r\n                                    <div className=\"resultEl\"><div className=\"resultHead\">Вартість</div></div>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"order-ul\">\r\n                                {\r\n                                    parsedTimes.map((slot, index) => {\r\n                                        return (\r\n                                            <ul className=\"resultList\" key={index}>\r\n                                                <li>\r\n                                                    <div className=\"resultEl\"><div className=\"resultHeadMob\">Мова</div><div className=\"resultItem\">{lang_from_general_cal}</div></div>\r\n                                                    <div className=\"resultEl\"><div className=\"resultHeadMob\">Рівень</div><div className=\"resultItem\">{level}</div></div>\r\n                                                    <div className=\"resultEl\"><div className=\"resultHeadMob\">Тип уроку</div><div className=\"resultItem\">{lessonTypes}</div></div>\r\n                                                    <div className=\"resultEl\"><div className=\"resultHeadMob\">Вчитель</div><div className=\"resultItem\">{teacherName}</div></div>\r\n                                                    <div className=\"resultEl\"><div className=\"resultHeadMob\">Дата</div><div className=\"resultItem\">{slot}</div></div>\r\n                                                    <div className=\"resultEl\"><div className=\"resultHeadMob\">Вартість</div><div className=\"resultItem\">1000 грн</div></div>\r\n                                                </li>\r\n                                            </ul>\r\n                                        )\r\n                                    }\r\n                                    )\r\n                                }\r\n                                \r\n                            </div>\r\n                            <div className=\"totalPrice\">ДО СПЛАТИ: 2000 грн</div>\r\n                        </>\r\n                    )\r\n\r\n\r\n                } else {\r\n                    return <p>No valid times found.</p>;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error parsing selectedTimes\", error);\r\n                return <p>Error retrieving times.</p>;\r\n            }\r\n        }\r\n    }\r\n\r\n    return <p>No selected slots or times found.</p>;\r\n};\r\n\r\nexport default RenderSelectedSlots;\r\n","import CryptoJS from 'crypto-js';\r\n\r\n\r\nconst generatePaymentURL = (newOrderId) => {\r\n    const liqpayData = {\r\n      public_key: 'sandbox_i38312250017',\r\n      version: '3',\r\n      action: 'pay',\r\n      subscribe_periodicity: 'month',\r\n      amount: '55',\r\n      currency: 'UAH',\r\n      description: 'Description',\r\n      order_id: newOrderId, // Используем новый orderId\r\n      sandbox: 'sandbox',\r\n      return_url: 'http://localhost:3000/final'\r\n    };\r\n\r\n    const liqpayDataStr = btoa(JSON.stringify(liqpayData));\r\n    const signString = `sandbox_FRDaasO0MmnhPbbp9U3d8DylKxr6ah8ppwkWKCcY${liqpayDataStr}sandbox_FRDaasO0MmnhPbbp9U3d8DylKxr6ah8ppwkWKCcY`;\r\n    const liqpaySignature = CryptoJS.SHA1(signString).toString(CryptoJS.enc.Base64);\r\n\r\n    return `https://www.liqpay.ua/api/3/checkout?data=${liqpayDataStr}&signature=${liqpaySignature}`;\r\n  };\r\n\r\n  export default generatePaymentURL","import axios from 'axios';\r\nimport { formatDateToUkrainian } from '../smallFn/convertDate'; // Предположим, что у тебя есть этот хелпер\r\n\r\nexport const orderRequest = async ({\r\n    username,\r\n    email,\r\n    phone,\r\n    order,\r\n    time,\r\n    lang,\r\n    levelName,\r\n    teacherId,\r\n    teacherName,\r\n    lessonTypes,\r\n    selectedSlots,\r\n    count,\r\n    students,\r\n    setMessage,\r\n    setErrorMessage\r\n}) => {\r\n    try {\r\n        // Отправляем данные заказа на сервер\r\n        const resp = await axios.post('http://13.60.221.226/api/registerorder', {\r\n            username,\r\n            email,\r\n            phone,\r\n            order,\r\n            time,\r\n            lang,\r\n            levelName,\r\n            teacherId,\r\n            teacherName,\r\n            lessonTypes,\r\n            selectedSlots,\r\n            count,\r\n            students,\r\n            payment_status: 'Не оплачено'\r\n        });\r\n\r\n        if (resp.status === 201) {\r\n            // Если время было успешно забронировано\r\n            const bookedTimes = resp.data.unBookedSlots.map(slot => formatDateToUkrainian(slot));\r\n            setMessage(`Час заброньовано: ${bookedTimes.join(', ')}`);\r\n        }\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 400) {\r\n            const bookedTimes = error.response.data.bookedSlots.map(slot => formatDateToUkrainian(slot));\r\n            const unBookedTimes = error.response.data.unBookedSlots.map(slot => formatDateToUkrainian(slot));\r\n\r\n            let errorMessage = `Ви вже маєте запис на час: ${bookedTimes.join(', ')}`;\r\n\r\n            if (unBookedTimes.length > 0) {\r\n                errorMessage += `\\nУспішно заброньовані: ${unBookedTimes.join(', ')}`;\r\n            }\r\n\r\n            setErrorMessage(errorMessage);\r\n        } else {\r\n            setErrorMessage(error.response ? error.response.data.error : 'Произошла ошибка');\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default orderRequest;","const fetchUserData = async (setUser, axios, setUsername = null, setEmail = null, setPhone = null, setOrders = null) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        try {\r\n            const response = await axios.get('http://13.60.221.226/api/me', {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n\r\n            console.log('Response Data:', response.data);\r\n\r\n            const { user, orders } = response.data;\r\n\r\n            setUser(user);\r\n            setUsername(user.username);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setOrders(orders)\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching user data:', error);\r\n        }\r\n    }\r\n};\r\n\r\nexport default fetchUserData;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { formatDateToUkrainian } from \"../../common/utils/smallFn/convertDate\";\r\nimport RenderSelectedSlots from \"../../common/utils/smallFn/getResultData\";\r\nimport generatePaymentURL from \"../../common/utils/payments/generatePaymentUrl\";\r\nimport orderRequest from \"../../common/utils/payments/orderRequest\";\r\nimport { Link } from 'react-router-dom';\r\nimport LogoImg from '../../services/images/Group12.svg'\r\nimport Modal from \"../../common/components/modal/modal\";\r\nimport Login from \"../regPages/Login\";\r\nimport Registration from \"../regPages/Registration\";\r\nimport axios from \"axios\";\r\nimport './finalPage.css'\r\nimport '../chooseLanguage/language.css'\r\nimport '../backet/backet.css'\r\nimport fetchUserData from \"../../common/utils/smallFn/getUserData\";\r\nimport UserIconImg from '../../services/images/personal-cab.svg'\r\nimport PhoneIconImg from '../../services/images/phone.svg'\r\nimport Footer from \"../../common/components/Footer/Footer\";\r\n\r\nconst FinalPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [lang, setLang] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [levelName, setLevelName] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [order, setOrder] = useState(null);\r\n  const [time, setTime] = useState(null);\r\n  const [selectedSlots, setSelectedSlots] = useState(null);\r\n  const [students, setStudents] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('login');\r\n  const [activeTabResult, setActiveTabResult] = useState(false)\r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n  const [orderId, setOrderId] = useState()\r\n  const [currentStudentIndex, setCurrentStudentIndex] = useState(0);\r\n  const [stud, setStud] = useState(false)\r\n\r\n  const location = useLocation();\r\n  const { language, level, lang_from_general_cal, teacherId, teacherName, lessonTypes, count, schoolId } = location.state || {};\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(async () => {\r\n      try {\r\n        const response = await axios.get('http://13.60.221.226/api/checkpaymentstatus', {\r\n          params: { orderId }\r\n        });\r\n\r\n        console.log(response.data)\r\n        // Останавливаем проверку, если оплата прошла успешно\r\n        if (response.data === 'success') {\r\n          try {\r\n            setPaymentStatus('Оплачено');\r\n            setMessage('Оплата успешно подтверждена.');\r\n\r\n            // Отправляем данные заказа на сервер\r\n            const resp = await axios.post('http://13.60.221.226/api/registerorder', {\r\n              username, email, phone, order, time, lang, levelName, teacherId, teacherName, lessonTypes, selectedSlots, count, students, payment_status: 'Оплачено'\r\n            });\r\n\r\n            if (resp.status === 201) {\r\n              // Если время было успешно забронировано\r\n              const bookedTimes = resp.data.unBookedSlots.map(slot => formatDateToUkrainian(slot));\r\n              setMessage(`Час забронирован: ${bookedTimes.join(', ')}`);\r\n            }\r\n          } catch (error) {\r\n            if (error.response && error.response.status === 400) {\r\n              const bookedTimes = error.response.data.bookedSlots.map(slot => formatDateToUkrainian(slot));\r\n              const unBookedTimes = error.response.data.unBookedSlots.map(slot => formatDateToUkrainian(slot));\r\n\r\n              let errorMessage = `Ви вже маєте запис на час: ${bookedTimes.join(', ')}`;\r\n\r\n              if (unBookedTimes.length > 0) {\r\n                errorMessage += `\\nУспешно забронированы: ${unBookedTimes.join(', ')}`;\r\n              }\r\n\r\n              setErrorMessage(errorMessage);\r\n            } else {\r\n              setErrorMessage(error.response ? error.response.data.error : 'Произошла ошибка');\r\n            }\r\n          }\r\n          clearInterval(intervalId);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Ошибка проверки статуса оплаты\", error);\r\n      }\r\n    }, 5000); // Проверяем каждые 5 секунд\r\n\r\n    return () => clearInterval(intervalId);  // Чистим интервал при размонтировании компонента\r\n  }, [orderId]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetchUserData(setUser, axios, setUsername, setEmail, setPhone);\r\n\r\n      const existingData = localStorage.getItem('data');\r\n      const selectedTimes = localStorage.getItem('selectedDates');\r\n      const selectedSlots = localStorage.getItem('selectedSlots');\r\n\r\n      setOrder(existingData);\r\n      setTime(selectedTimes);\r\n      setSelectedSlots(selectedSlots);\r\n\r\n      if (language) {\r\n        setLang(language);\r\n      } else if (lang_from_general_cal) {\r\n        setLang(lang_from_general_cal);\r\n      }\r\n      setLevelName(level);\r\n\r\n      if (count) {\r\n        const initialStudents = Array.from({ length: count }, () => ({ name: '', email: '', phone: '' }));\r\n        setStudents(initialStudents);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [count]);\r\n\r\n  const handleStudentChange = (index, field, value) => {\r\n    const updatedStudents = [...students];\r\n    updatedStudents[index][field] = value;\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const toggleModal = (open = !isModalOpen) => {\r\n    setIsModalOpen(open);\r\n    setActiveTabResult(open)\r\n  };\r\n\r\n  const toggleModalResult = (open = !activeTabResult) => {\r\n    setActiveTabResult(open)\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // const token = localStorage.getItem('token');\r\n\r\n    // if (!token) {\r\n    //   toggleModal(true);\r\n    //   return;\r\n    // }\r\n\r\n    try {\r\n      const newOrderId = `order_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n      setOrderId(newOrderId); // Обновляем состояние с новым orderId\r\n      localStorage.setItem('OrderId', newOrderId)\r\n      // Используем локальную переменную newOrderId для генерации ссылки\r\n      const paymentUrl = generatePaymentURL(newOrderId);\r\n      window.open(paymentUrl, '_blank');\r\n    } catch (error) {\r\n      console.error('Ошибка при оплате или отправке данных', error);\r\n      setErrorMessage('Произошла ошибка при оплате');\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n\r\n    if (currentStudentIndex < students.length - 1) {\r\n      setCurrentStudentIndex(currentStudentIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (currentStudentIndex > 0) {\r\n      setCurrentStudentIndex(currentStudentIndex - 1);\r\n    }\r\n  };\r\n\r\n  function isValidEmail(email) {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main final\">\r\n        <div className=\"container\">\r\n          <div className='logo'>\r\n            <div className='logo-items'>\r\n              <Link to={`/${schoolId}`}><img src={LogoImg} alt=\"Logo\" /></Link>\r\n              <div className='logo-name'>Мовна школа <span>EAGLES</span></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"auth-form-container\">\r\n            <Modal className={'modal-content'} isOpen={isModalOpen} onClose={() => toggleModal(false)}>\r\n              <div className=\"tabs\">\r\n                <button\r\n                  className={activeTab === 'login' ? 'active' : ''}\r\n                  onClick={() => setActiveTab('login')}\r\n                >\r\n                  Вхід\r\n                </button>\r\n                <button\r\n                  className={activeTab === 'register' ? 'active' : ''}\r\n                  onClick={() => setActiveTab('register')}\r\n                >\r\n                  Реєстрація\r\n                </button>\r\n              </div>\r\n              {activeTab === 'login' ? <Login /> : <Registration />}\r\n            </Modal>\r\n            <h2>Підтвердження запису</h2>\r\n            <form className=\"order-confirm-form\" onSubmit={handleSubmit}>\r\n\r\n              <div className=\"field\">\r\n                <img src={UserIconImg} alt=\"\" />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              {students.length > 0 && (\r\n                <>\r\n                  <div key={currentStudentIndex}>\r\n                    <h4 className=\"student-number\">Студент {currentStudentIndex + 1}</h4>\r\n\r\n                    <div className=\"field\">\r\n                      <img src={UserIconImg} alt=\"\" />\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Ім'я студента\"\r\n                        value={students[currentStudentIndex].name}\r\n                        onChange={(e) =>\r\n                          handleStudentChange(currentStudentIndex, 'name', e.target.value)\r\n                        }\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                      <img src={PhoneIconImg} alt=\"\" />\r\n                      <input\r\n                        type=\"phone\"\r\n                        placeholder=\"Телефон студента\"\r\n                        value={students[currentStudentIndex].phone}\r\n                        onChange={(e) =>\r\n                          handleStudentChange(currentStudentIndex, 'phone', e.target.value)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"actions\">\r\n                    {currentStudentIndex > 0 && (\r\n                      <button type=\"button\" onClick={handleBack}>\r\n                        Назад\r\n                      </button>\r\n                    )}\r\n\r\n                    {currentStudentIndex < students.length - 1 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={handleNext}\r\n                        disabled={!students[currentStudentIndex].name || !students[currentStudentIndex].phone || !isValidEmail(email)}\r\n                      >\r\n                        Далі\r\n                      </button>\r\n                    )}\r\n\r\n                    {currentStudentIndex === students.length - 1 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => toggleModalResult(true)}\r\n                        disabled={!students[currentStudentIndex].name || !students[currentStudentIndex].phone || !isValidEmail(email)}\r\n                      >\r\n                        Оплатити\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div>\r\n                <Modal className={'modal-content-result'} isOpen={activeTabResult} onClose={() => toggleModalResult(false)}>\r\n                  <div >\r\n                    <div className=\"\">\r\n                      <h2>Замовлення</h2>\r\n\r\n\r\n                      <div className=\"studentsList\" >\r\n                        <span className=\"modal-close\" onClick={() => toggleModalResult(false)}>&times;</span>\r\n                        {/* <div className=\"triangle\"></div> */}\r\n                        <div className=\"students-block\">\r\n                          <div className=\"students-head\">Учні:</div>\r\n                          <div className=\"contents-block\">\r\n                            {students.map((student, index) => (\r\n                              <div className=\"content\" key={index}>\r\n                                <p>{student.name}</p>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      {language && <div>{teacherName}{RenderSelectedSlots(language, level, lang_from_general_cal, teacherId, teacherName, lessonTypes, count, schoolId)}</div>}\r\n                      {lang_from_general_cal && <div>{RenderSelectedSlots(language, level, lang_from_general_cal, teacherId, teacherName, lessonTypes, count, schoolId)}</div>}\r\n                    </div>\r\n                    <div className=\"pay-btns\">\r\n                      <button type=\"submit\">Оплатити</button>\r\n                      <button type=\"button\" onClick={() => {\r\n                        orderRequest({\r\n                          username, email, phone, order, time, lang, levelName, teacherId, teacherName, lessonTypes, selectedSlots, count, students, setMessage, setErrorMessage\r\n                        });\r\n                        toggleModalResult(false); // Вызов дополнительной функции\r\n                      }}>Зробити заявку</button>\r\n                    </div>\r\n                    <div className=\"status-pay\">\r\n                      <h3>{paymentStatus && <div>Статус платежу: {paymentStatus}</div>}</h3>\r\n\r\n                    </div>\r\n                  </div>\r\n                </Modal>\r\n              </div>\r\n              <p>{message}</p>\r\n              <p className=\"error-message\">{errorMessage}</p>\r\n\r\n\r\n            </form>\r\n          </div>\r\n        </div >\r\n      </div >\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinalPage;\r\n"],"names":["parseUkrainianDate","dateStr","cleanedDateStr","replace","trim","day","monthUkr","year","time","time2","time3","split","monthEng","Date","toUTCString","formatDateToUkrainian","date","getUTCDate","getUTCMonth","getUTCFullYear","String","getUTCHours","padStart","getUTCMinutes","RenderSelectedSlots","language","level","lang_from_general_cal","teacherId","teacherName","lessonTypes","count","schoolId","selectedSlots","localStorage","getItem","parsedSlots","JSON","parse","Array","isArray","_jsxs","children","_jsx","style","backgroundColor","className","map","slot","index","student","lessonType","formattedDate","error","console","selectedTimes","parsedTimes","_Fragment","newOrderId","liqpayData","public_key","version","action","subscribe_periodicity","amount","currency","description","order_id","sandbox","return_url","liqpayDataStr","btoa","stringify","signString","CryptoJS","toString","Base64","async","username","email","phone","order","lang","levelName","students","setMessage","setErrorMessage","_ref","resp","axios","post","payment_status","status","data","unBookedSlots","join","response","bookedTimes","bookedSlots","unBookedTimes","errorMessage","length","setUser","setUsername","arguments","undefined","setEmail","setPhone","setOrders","token","get","headers","log","user","orders","FinalPage","useState","setLang","setLevelName","message","setOrder","setTime","setSelectedSlots","setStudents","isModalOpen","setIsModalOpen","activeTab","setActiveTab","activeTabResult","setActiveTabResult","paymentStatus","setPaymentStatus","orderId","setOrderId","currentStudentIndex","setCurrentStudentIndex","stud","setStud","location","useLocation","state","useEffect","intervalId","setInterval","params","clearInterval","fetchUserData","existingData","initialStudents","from","name","fetchData","handleStudentChange","field","value","updatedStudents","toggleModalResult","isValidEmail","test","Link","to","src","LogoImg","alt","Modal","isOpen","onClose","open","toggleModal","onClick","Login","Registration","onSubmit","e","preventDefault","Math","random","substr","setItem","paymentUrl","generatePaymentURL","window","UserIconImg","type","placeholder","onChange","target","PhoneIconImg","handleBack","handleNext","disabled","orderRequest","Footer"],"sourceRoot":""}